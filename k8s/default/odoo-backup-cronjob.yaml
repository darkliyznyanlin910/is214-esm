apiVersion: batch/v1
kind: CronJob
metadata:
  name: odoo-backup
  namespace: default
spec:
  schedule: "0 */4 * * *" # Run every 4 hours
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
            - name: odoo-backup-creator
              image: curlimages/curl:latest
              command:
                - /bin/sh
                - -c
                - |
                  BACKUP_DIR=/backups
                  ODOO_DATABASE=$(cat /etc/configmap/PGDATABASE)
                  ADMIN_PASSWORD=$(cat /etc/secrets/master_password)
                  BACKUP_FILENAME="${ODOO_DATABASE}-$(date +%Y%m%d_%H).zip"

                  echo "Creating backup directory"
                  mkdir -p ${BACKUP_DIR}

                  echo "Creating Odoo backup"
                  curl -X POST \
                    -F "master_pwd=${ADMIN_PASSWORD}" \
                    -F "name=${ODOO_DATABASE}" \
                    -F "backup_format=zip" \
                    -o ${BACKUP_DIR}/${BACKUP_FILENAME} \
                    http://odoo:80/web/database/backup

                  echo "Backup created, listing files"
                  ls -la ${BACKUP_DIR}
              volumeMounts:
                - name: odoo-secrets
                  mountPath: /etc/secrets
                  readOnly: true
                - name: odoo-config
                  mountPath: /etc/configmap
                  readOnly: true
                - name: backup-volume
                  mountPath: /backups
          containers:
            - name: aws-backup
              image: amazon/aws-cli:latest
              command:
                - /bin/sh
                - -c
                - |
                  # Load environment variables from secrets
                  export AWS_ACCESS_KEY_ID=$(cat /etc/aws-secrets/AWS_ACCESS_KEY_ID)
                  export AWS_SECRET_ACCESS_KEY=$(cat /etc/aws-secrets/AWS_SECRET_ACCESS_KEY)
                  export AWS_REGION=$(cat /etc/aws-secrets/AWS_REGION)
                  export S3_BUCKET=$(cat /etc/aws-secrets/S3_BUCKET)

                  BACKUP_DIR=/backups
                  ODOO_DATABASE=$(cat /etc/configmap/PGDATABASE)
                  BACKUP_FILENAME="${ODOO_DATABASE}-$(date +%Y%m%d_%H).zip"

                  echo "Listing backup files"
                  ls -la ${BACKUP_DIR}

                  echo "Uploading backup to S3"
                  aws s3 cp ${BACKUP_DIR}/${BACKUP_FILENAME} s3://${S3_BUCKET}/odoo-backups/${BACKUP_FILENAME}
              volumeMounts:
                - name: odoo-config
                  mountPath: /etc/configmap
                  readOnly: true
                - name: aws-secrets
                  mountPath: /etc/aws-secrets
                  readOnly: true
                - name: backup-volume
                  mountPath: /backups
                  readOnly: true
            - name: r2-backup
              image: amazon/aws-cli:latest
              command:
                - /bin/sh
                - -c
                - |
                  # Load environment variables from secrets
                  export AWS_ACCESS_KEY_ID=$(cat /etc/r2-secrets/R2_ACCESS_KEY_ID)
                  export AWS_SECRET_ACCESS_KEY=$(cat /etc/r2-secrets/R2_SECRET_ACCESS_KEY)
                  export R2_ACCOUNT_ID=$(cat /etc/r2-secrets/R2_ACCOUNT_ID)
                  export R2_BUCKET=$(cat /etc/r2-secrets/R2_BUCKET)
                  export AWS_REGION="auto"

                  BACKUP_DIR="/backups"
                  ODOO_DATABASE=$(cat /etc/configmap/PGDATABASE)
                  BACKUP_FILENAME="${ODOO_DATABASE}-$(date +%Y%m%d_%H).zip"

                  echo "Listing backup files"
                  ls -la ${BACKUP_DIR}

                  echo "Uploading backup to Cloudflare R2 using direct method"

                  # Define variables for upload
                  OBJECT_KEY="odoo-backups/${BACKUP_FILENAME}"
                  HOST="${R2_ACCOUNT_ID}.r2.cloudflarestorage.com"

                  # Execute the upload directly using AWS CLI instead of presigned URL
                  aws s3 cp ${BACKUP_DIR}/${BACKUP_FILENAME} s3://${R2_BUCKET}/${OBJECT_KEY} \
                    --endpoint-url https://${HOST} --checksum-algorithm CRC32
              volumeMounts:
                - name: odoo-config
                  mountPath: /etc/configmap
                  readOnly: true
                - name: r2-secrets
                  mountPath: /etc/r2-secrets
                  readOnly: true
                - name: backup-volume
                  mountPath: /backups
                  readOnly: true
          restartPolicy: OnFailure
          volumes:
            - name: odoo-secrets
              secret:
                secretName: odoo-secret
                items:
                  - key: master_password
                    path: master_password
            - name: odoo-config
              configMap:
                name: odoo-env
            - name: aws-secrets
              secret:
                secretName: odoo-s3-secret
            - name: r2-secrets
              secret:
                secretName: odoo-r2-secret
            - name: backup-volume
              emptyDir: {}
